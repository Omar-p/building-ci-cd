name: Backend
on:
  push:
    paths:
      - 'backend/**'
      - '.github/workflows/backend.yaml'
    branches:
      - master
      - backend
  pull_request:
    paths:
      - 'backend/**'
      - '.github/workflows/backend.yaml'
    branches:
      - master
      - backend

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Cache Node Modules
        id: cache
        uses: actions/cache@v3
        with:
          path: /backend/node_modules
          key: node-modules-cache

      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 16.x

      - name: Install Dependencies
        run: cd backend && npm install

      - name: Build
        run: cd backend && npm run build

      - name: Store Artifact
        uses: actions/upload-artifact@v3
        with:
          name: backend-artifact
          path: backend/build/

  lint:
    needs: [build]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 16.x

      - name: Cache Node Modules
        id: cache
        uses: actions/cache@v3
        with:
          path: /backend/node_modules
          key: node-modules-cache

      - name: Install Dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: cd backend && npm install

      - name: Lint the code
        run: cd backend && npm run lint
  test:
    needs: [build]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 16.x

      - name: Cache Node Modules
        id: cache
        uses: actions/cache@v3
        with:
          path: /backend/node_modules
          key: node-modules-cache

      - name: Install Dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: cd backend && npm install

      - name: Run Unit Tests
        run: cd backend && npm run test

  security-audit:
    needs: [build]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Check for security vulnerabilities
        run: cd backend && npm audit --audit-level=high

  static-analysis:
    needs: [build]
    runs-on: ubuntu-latest
    permissions:
      security-events: write

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v2
        with:
          languages: javascript

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 16.x

      - name: Insall Dependencies
        run: cd backend && npm install

      - name: Build
        run: cd backend && npm run build

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v2
        with:
          languages: javascript
          query: codeql/ql/src/Security/CWE-079/SQLInjection.ql
          github_token: ${{ secrets.GITHUB_TOKEN }}
          sarif_file: codeql-analysis-results.sarif

  deploy_to_eb:
    if: github.ref == 'refs/heads/master'
    needs: [security-audit, static-analysis, lint, test]
    runs-on: ubuntu-latest
    outputs:
      eb-env-url: ${{ steps.deploy.outputs.eb-env-url }}
    steps:
      - name: Get Artifact
        uses: actions/download-artifact@v2
        with:
          name: backend-artifact
          path: backend/build

      - name: Prepare ProcFile
        run: |
          echo "web: node server.js" > backend/build/Procfile

      - name: Prepare Zip
        run: |
          cd backend/build
          zip -r artifact.zip ./ -x '*.git*'

      - name: Deploy to EB
        id: deploy
        uses: einaregilsson/beanstalk-deploy@v21
        with:
          aws_access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          application_name: CICD-AnyHasher
          environment_name: CICD-AnyHasher-env
          version_label: anyhasher-${{ github.run_number }}
          region: us-east-1
          deployment_package: backend/build/artifact.zip

  verify-production:
    runs-on: ubuntu-latest
    needs: [deploy_to_eb]
    if: github.ref == 'refs/heads/master'
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Run Smoke Test
        run: |
          export BACKEND_URL=CICD-AnyHasher.us-east-1.elasticbeanstalk.com
          cd backend/e2e
          chmod +x ./backend-smoke.sh
          ./backend-smoke.sh